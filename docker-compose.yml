version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: kidssmart_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_123}
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - kidssmart_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-root_password_123}"]
      timeout: 20s
      retries: 10
      interval: 10s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kidssmart_web
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    depends_on:
      database:
        condition: service_healthy
    environment:
      FLASK_APP: main.py
      FLASK_ENV: development
      DB_HOST: database
      DB_NAME_USERS: ${DB_NAME_USERS:-kidssmart_users}
      DB_NAME_APP: ${DB_NAME_APP:-kidssmart_app}
      DB_USER: ${DB_USER:-app_user}
      DB_PASSWORD: ${DB_PASSWORD:-AppPass123!}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
    networks:
      - kidssmart_network
    command: flask run --host=0.0.0.0

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: kidssmart_phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_USER: ${DB_USER:-app_user}
      PMA_PASSWORD: ${DB_PASSWORD:-AppPass123!}
    depends_on:
      - database
    networks:
      - kidssmart_network

  php:
    build:
      context: ./website/alt_php_templates
      dockerfile: Dockerfile.php
    container_name: kidssmart_php
    ports:
      - "8081:80"
    volumes:
      - ./website/alt_php_templates:/var/www/html
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_HOST: database
      DB_NAME: ${DB_NAME_APP:-kidssmart_app}
      DB_USER: ${DB_USER:-app_user}
      DB_PASSWORD: ${DB_PASSWORD:-AppPass123!}
    networks:
      - kidssmart_network

  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    container_name: kidssmart_scraper
    restart: "no"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_HOST: database
      DB_NAME: ${DB_NAME_APP}
      DB_USER: ${SCRAPER_USER}
      DB_PASSWORD: ${SCRAPER_PASSWORD}
    volumes:
      - ./kidssmart:/app/kidssmart
    networks:
      - kidssmart_network
    working_dir: /app/kidssmart

networks:
  kidssmart_network:
    driver: bridge

volumes:
  db_data:
    driver: local