# MySQL Database Service
services:
  database:
    image: mysql:8.0
    container_name: kidssmart_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: kidssmart_app  # Default database created on first start
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d  # SQL initialization scripts
    ports:
      - "3306:3306"
    networks:
      - kidssmart_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 10s

  # Flask Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kidssmart_web
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    depends_on:
      database:
        condition: service_healthy
    environment:
      FLASK_APP: main.py
      FLASK_ENV: development
      DB_HOST: database
      DB_NAME: ${DB_NAME:-kidssmart}
      DB_USER: ${DB_USER:-kidssmart_user}
      DB_PASSWORD: ${DB_PASSWORD:-securepassword}
    networks:
      - kidssmart_network
    command: flask run --host=0.0.0.0

  # Scrapy Scraper Service
  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    container_name: kidssmart_scraper
    restart: "no"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DB_HOST: database
      DB_NAME: ${DB_NAME:-kidssmart}
      DB_USER: ${DB_USER:-kidssmart_user}
      DB_PASSWORD: ${DB_PASSWORD:-securepassword}
    volumes:
      - ./kidssmart:/app/kidssmart
    networks:
      - kidssmart_network
    working_dir: /app/kidssmart

  # phpMyAdmin (Optional - for database management)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: kidssmart_phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_USER: ${DB_USER:-kidssmart_user}
      PMA_PASSWORD: ${DB_PASSWORD:-securepassword}
    depends_on:
      - database
    networks:
      - kidssmart_network

networks:
  kidssmart_network:
    driver: bridge

volumes:
  db_data:
    driver: local